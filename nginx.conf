events {
    worker_connections 1024;
}

http {
    upstream ml_backend {
        server ml-pipeline:8000;
        server ml-pipeline-replica1:8000;
        server ml-pipeline-replica2:8000;
    }

    upstream metrics_backend {
        server ml-pipeline:8001;
        server ml-pipeline-replica1:8001;
        server ml-pipeline-replica2:8001;
    }

    server {
        listen 80;
        server_name localhost;

        # Main application
        location / {
            proxy_pass http://ml_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Increase timeout for long-running requests (model training)
            proxy_read_timeout 300s;
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
        }

        # Metrics endpoint
        location /metrics {
            proxy_pass http://metrics_backend/metrics;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Static files
        location /static/ {
            proxy_pass http://ml_backend/static/;
            expires 1d;
            add_header Cache-Control "public, immutable";
        }

        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
    }

    # Logging
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css text/xml text/javascript application/javascript application/xml+rss application/json;

    # Client max body size (for file uploads)
    client_max_body_size 100M;
}